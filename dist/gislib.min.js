/*! gislib 2.0.22 by ramsestom
* Library to provide geo functions like distance calculation,
* conversion of decimal coordinates to sexagesimal and vice versa, etc.
* WGS 84 (World Geodetic System 1984)
* 
* @author ramsestom
* @url 
* @version 2.0.22
* @license MIT 
**/
!function(a,b){"use strict";function c(){}c.TO_RAD=Math.PI/180,c.PI_360=Math.PI/360,c.TO_DEG=180/Math.PI,c.PI_X2=2*Math.PI,c.PI_DIV4=Math.PI/4;var d=Object.create(c.prototype,{version:{value:"2.0.22"},radius:{value:6378137},minLat:{value:-90},maxLat:{value:90},minLon:{value:-180},maxLon:{value:180},sexagesimalPattern:{value:/^([0-9]{1,3})Â°\s*([0-9]{1,3}(?:\.(?:[0-9]{1,2}))?)'\s*(([0-9]{1,3}(\.([0-9]{1,4}))?)"\s*)?([NEOSW]?)$/},measures:{value:Object.create(Object.prototype,{m:{value:1},km:{value:.001},cm:{value:100},mm:{value:1e3},mi:{value:1/1609.344},sm:{value:1/1852.216},ft:{value:100/30.48},"in":{value:100/2.54},yd:{value:1/.9144}})},prototype:{value:c.prototype},extend:{value:function(a,b){for(var c in a)("undefined"==typeof d.prototype[c]||b===!0)&&("function"==typeof a[c]&&"function"==typeof a[c].bind?d.prototype[c]=a[c].bind(d):d.prototype[c]=a[c])}}});"undefined"==typeof Number.prototype.toRad&&(Number.prototype.toRad=function(){return this*c.TO_RAD}),"undefined"==typeof Number.prototype.toDeg&&(Number.prototype.toDeg=function(){return this*c.TO_DEG}),d.extend({exactDistances:!0,decimal:{},sexagesimal:{},distance:null,getKeys:function(a){if("[object Array]"==Object.prototype.toString.call(a))return{longitude:a.length>=1?0:b,latitude:a.length>=2?1:b,elevation:a.length>=3?2:b};var c=function(b){var c;return b.every(function(b){return"object"!=typeof a?!0:a.hasOwnProperty(b)?function(){return c=b,!1}():!0}),c},d=c(["lng","lon","longitude"]),e=c(["lat","latitude"]),f=c(["alt","altitude","elevation","elev"]);return"undefined"==typeof e&&"undefined"==typeof d&&"undefined"==typeof f?b:{latitude:e,longitude:d,elevation:f}},toGeoPoint:function(a){var b={latitude:this.useDecimal(a[this.getKeys(a).latitude]),longitude:this.useDecimal(a[this.getKeys(a).longitude])},c=a[this.getKeys(a).elevation];return"undefined"!=typeof c&&(b.elevation=c),b},validate:function(a){var b=this.getKeys(a);if("undefined"==typeof b||"undefined"==typeof b.latitude||"undefined"===b.longitude)return!1;var c=a[b.latitude],d=a[b.longitude];return"undefined"==typeof c||!this.isDecimal(c)&&!this.isSexagesimal(c)?!1:"undefined"==typeof d||!this.isDecimal(d)&&!this.isSexagesimal(d)?!1:(c=this.useDecimal(c),d=this.useDecimal(d),c<this.minLat||c>this.maxLat||d<this.minLon||d>this.maxLon?!1:!0)},roundAccuracy:function(a,b){return Math.floor(Math.round(a/b)*b)},setExactDistancesMode:function(a){this.exactDistances=a},getVincentyDistance:function(a,b){var c,d,e,f,g,h,i,j=6378137,k=6356752.314245,l=1/298.257223563,m=(b.longitude-a.longitude).toRad(),n=Math.atan((1-l)*Math.tan(a.latitude.toRad())),o=Math.atan((1-l)*Math.tan(b.latitude.toRad())),p=Math.sin(n),q=Math.cos(n),r=Math.sin(o),s=Math.cos(o),t=m,u=100;do{var v=Math.sin(t),w=Math.cos(t);if(h=Math.sqrt(s*v*(s*v)+(q*r-p*s*w)*(q*r-p*s*w)),0===h)return 0;c=p*r+q*s*w,d=Math.atan2(h,c),e=q*s*v/h,f=1-e*e,g=c-2*p*r/f,isNaN(g)&&(g=0);var x=l/16*f*(4+l*(4-3*f));i=t,t=m+(1-x)*l*e*(d+x*h*(g+x*c*(-1+2*g*g)))}while(Math.abs(t-i)>1e-12&&--u>0);if(0===u)return NaN;var y=f*(j*j-k*k)/(k*k),z=1+y/16384*(4096+y*(-768+y*(320-175*y))),A=y/1024*(256+y*(-128+y*(74-47*y))),B=A*h*(g+A/4*(c*(-1+2*g*g)-A/6*g*(-3+4*h*h)*(-3+4*g*g))),C=k*z*(d-B);if("undefined"!=typeof a.elevation&&"undefined"!=typeof b.elevation){var D=Math.abs(a.elevation-b.elevation);C=Math.sqrt(C*C+D*D)}return C},getHaversineDistance:function(a,b){const d=Math.cos((a.latitude+b.latitude)*c.PI_360),e=(b.latitude-a.latitude)*c.PI_360,f=(b.longitude-a.longitude)*c.PI_360,g=e*e+d*d*f*f,h=2*Math.atan2(Math.sqrt(g),Math.sqrt(1-g));return this.radius*h},getDistance:function(a,b,c){return this.exactDistances?getVincentyDistance(a,b,c):getHaversineDistance(a,b,c)},getCenter:function(a){var b=a;if("object"==typeof a&&!(a instanceof Array)){b=[];for(var d in a)b.push(this.coords(a[d]))}if(!b.length)return null;var e,f,g,h=0,i=0,j=0;b.forEach(function(a){e=a.latitude.toRad(),f=a.longitude.toRad(),h+=Math.cos(e)*Math.cos(f),i+=Math.cos(e)*Math.sin(f),j+=Math.sin(e)},this);var k=b.length;return h/=k,i/=k,j/=k,f=Math.atan2(i,h),g=Math.sqrt(h*h+i*i),e=Math.atan2(j,g),{latitude:(e*c.TO_DEG).toFixed(6),longitude:(f*c.TO_DEG).toFixed(6)}},getBounds:function(a){if(!a.length)return!1;var b=a[0].elevation,c={maxLat:-(1/0),minLat:1/0,maxLng:-(1/0),minLng:1/0};"undefined"!=typeof b&&(c.maxElev=0,c.minElev=1/0);for(var d=0,e=a.length;e>d;++d)c.maxLat=Math.max(a[d].latitude,c.maxLat),c.minLat=Math.min(a[d].latitude,c.minLat),c.maxLng=Math.max(a[d].longitude,c.maxLng),c.minLng=Math.min(a[d].longitude,c.minLng),b&&(c.maxElev=Math.max(a[d].elevation,c.maxElev),c.minElev=Math.min(a[d].elevation,c.minElev));return c},getCenterOfBounds:function(a){var b=this.getBounds(a),c=b.minLat+(b.maxLat-b.minLat)/2,d=b.minLng+(b.maxLng-b.minLng)/2;return{latitude:parseFloat(c.toFixed(6)),longitude:parseFloat(d.toFixed(6))}},getBoundsOfDistance:function(a,b){var d,e,f=a.latitude.toRad(),g=a.longitude.toRad(),h=b/this.radius,i=f-h,j=f+h,k=this.maxLat.toRad(),l=this.minLat.toRad(),m=this.maxLon.toRad(),n=this.minLon.toRad();if(i>l&&k>j){var o=Math.asin(Math.sin(h)/Math.cos(f));d=g-o,n>d&&(d+=c.PI_X2),e=g+o,e>m&&(e-=c.PI_X2)}else i=Math.max(i,l),j=Math.min(j,k),d=n,e=m;return[{latitude:i.toDeg(),longitude:d.toDeg()},{latitude:j.toDeg(),longitude:e.toDeg()}]},isPointInside:function(a,b){for(var c=!1,d=-1,e=b.length,f=e-1;++d<e;f=d)(b[d].longitude<=a.longitude&&a.longitude<b[f].longitude||b[f].longitude<=a.longitude&&a.longitude<b[d].longitude)&&a.latitude<(b[f].latitude-b[d].latitude)*(a.longitude-b[d].longitude)/(b[f].longitude-b[d].longitude)+b[d].latitude&&(c=!c);return c},preparePolygonForIsPointInsideOptimized:function(a){for(var b=0,c=a.length-1;b<a.length;b++)a[c].longitude===a[b].longitude?(a[b].constant=a[b].latitude,a[b].multiple=0):(a[b].constant=a[b].latitude-a[b].longitude*a[c].latitude/(a[c].longitude-a[b].longitude)+a[b].longitude*a[b].latitude/(a[c].longitude-a[b].longitude),a[b].multiple=(a[c].latitude-a[b].latitude)/(a[c].longitude-a[b].longitude)),c=b},isPointInsideWithPreparedPolygon:function(a,b){for(var c=!1,d=a.longitude,e=a.latitude,f=0,g=b.length-1;f<b.length;f++)(b[f].longitude<d&&b[g].longitude>=d||b[g].longitude<d&&b[f].longitude>=d)&&(c^=d*b[f].multiple+b[f].constant<e),g=f;return c},isInside:function(){return this.isPointInside.apply(this,arguments)},isPointInCircle:function(a,b,c){return this.getDistance(a,b)<=c},withinRadius:function(){return this.isPointInCircle.apply(this,arguments)},getRhumbLineBearing:function(a,b){var d=b.longitude.toRad()-a.longitude.toRad(),e=Math.log(Math.tan(b.latitude.toRad()/2+c.PI_DIV4)/Math.tan(a.latitude.toRad()/2+c.PI_DIV4));return Math.abs(d)>Math.PI&&(d=d>0?-1*(c.PI_X2-d):c.PI_X2+d),(Math.atan2(d,e).toDeg()+360)%360},getBearing:function(a,b){var c=(Math.atan2(Math.sin(b.longitude.toRad()-a.longitude.toRad())*Math.cos(b.latitude.toRad()),Math.cos(a.latitude.toRad())*Math.sin(b.latitude.toRad())-Math.sin(a.latitude.toRad())*Math.cos(b.latitude.toRad())*Math.cos(b.longitude.toRad()-a.longitude.toRad())).toDeg()+360)%360;return c},getCompassDirection:function(a,b,c){var d,e;switch(e="circle"==c?this.getBearing(a,b):this.getRhumbLineBearing(a,b),Math.round(e/22.5)){case 1:d={exact:"NNE",rough:"N"};break;case 2:d={exact:"NE",rough:"N"};break;case 3:d={exact:"ENE",rough:"E"};break;case 4:d={exact:"E",rough:"E"};break;case 5:d={exact:"ESE",rough:"E"};break;case 6:d={exact:"SE",rough:"E"};break;case 7:d={exact:"SSE",rough:"S"};break;case 8:d={exact:"S",rough:"S"};break;case 9:d={exact:"SSW",rough:"S"};break;case 10:d={exact:"SW",rough:"S"};break;case 11:d={exact:"WSW",rough:"W"};break;case 12:d={exact:"W",rough:"W"};break;case 13:d={exact:"WNW",rough:"W"};break;case 14:d={exact:"NW",rough:"W"};break;case 15:d={exact:"NNW",rough:"N"};break;default:d={exact:"N",rough:"N"}}return d.bearing=e,d},getDirection:function(a,b,c){return this.getCompassDirection.apply(this,arguments)},orderByDistance:function(a,b){var c=Object.keys(b).map(function(c){var d=this.getDistance(a,b[c]),e=Object.create(b[c]);return e.distance=d,e.key=c,e},this);return c.sort(function(a,b){return a.distance-b.distance})},isPointInLine:function(a,b,c){return(this.getDistance(b,a)+this.getDistance(a,c)).toFixed(3)==this.getDistance(b,c).toFixed(3)},isPointNearLine:function(a,b,c,d){return this.getDistanceFromLine(a,b,c)<d},getDistanceFromLine:function(a,b,c){var d=this.getDistance(b,a).toFixed(3),e=this.getDistance(a,c).toFixed(3),f=this.getDistance(b,c).toFixed(3),g=0,h=Math.acos((d*d+f*f-e*e)/(2*d*f)),i=Math.acos((e*e+f*f-d*d)/(2*e*f));return g=h>Math.PI/2?d:i>Math.PI/2?e:Math.sin(h)*d},findNearest:function(a,b,c,d){c=c||0,d=d||1;var e=this.orderByDistance(a,b);return 1===d?e[c]:e.splice(c,d)},getPathLength:function(a){for(var b,c=0,d=0,e=a.length;e>d;++d)b&&(c+=this.getDistance(this.coords(a[d]),b)),b=this.coords(a[d]);return c},getSpeed:function(a,b,c){var e=c&&c.unit||"km";"mph"==e?e="mi":"kmh"==e&&(e="km");var f=d.getDistance(a,b),g=1*b.time/1e3-1*a.time/1e3,h=f/g*3600,i=Math.round(h*this.measures[e]*1e4)/1e4;return i},computeDestinationPoint:function(a,b,c,d){d="undefined"==typeof d?this.radius:Number(d);var e=Number(b)/d,f=Number(c).toRad(),g=Number(a.latitude).toRad(),h=Number(a.longitude).toRad(),i=Math.asin(Math.sin(g)*Math.cos(e)+Math.cos(g)*Math.sin(e)*Math.cos(f)),j=h+Math.atan2(Math.sin(f)*Math.sin(e)*Math.cos(g),Math.cos(e)-Math.sin(g)*Math.sin(i));return j=(j+3*Math.PI)%(2*Math.PI)-Math.PI,{latitude:i.toDeg(),longitude:j.toDeg()}},convertUnit:function(a,b,c,d){if(0===a)return 0;if("undefined"==typeof a){if(null===this.distance)throw new Error("No distance was given");if(0===this.distance)return 0;a=this.distance}if(b=b||"m",c=c||"m",d=null==d?4:d,"undefined"==typeof this.measures[b])throw new Error("Unknown input unit for conversion.");if("undefined"==typeof this.measures[c])throw new Error("Unknown output unit for conversion.");return this.round(a/this.measures[b]*this.measures[c],d)},useDecimal:function(a){if("[object Array]"===Object.prototype.toString.call(a)){var b=this;return a=a.map(function(a){if(b.isDecimal(a))return b.useDecimal(a);if("object"==typeof a){if(b.validate(a))return b.coords(a);for(var c in a)a[c]=b.useDecimal(a[c]);return a}return b.isSexagesimal(a)?b.sexagesimal2decimal(a):a})}if("object"==typeof a&&this.validate(a))return this.coords(a);if("object"==typeof a){for(var c in a)a[c]=this.useDecimal(a[c]);return a}if(this.isDecimal(a))return parseFloat(a);if(this.isSexagesimal(a)===!0)return parseFloat(this.sexagesimal2decimal(a));throw new Error("Unknown format.")},decimal2sexagesimal:function(a){if(a in this.sexagesimal)return this.sexagesimal[a];var b=a.toString().split("."),c=Math.abs(b[0]),d=60*("0."+(b[1]||0)),e=d.toString().split(".");return d=Math.floor(d),e=(60*("0."+(e[1]||0))).toFixed(2),this.sexagesimal[a]=c+"Â° "+d+"' "+e+'"',this.sexagesimal[a]},sexagesimal2decimal:function(a){if(a in this.decimal)return this.decimal[a];var b=new RegExp(this.sexagesimalPattern),c=b.exec(a),d=0,e=0;c&&(d=parseFloat(c[2]/60),e=parseFloat(c[4]/3600)||0);var f=(parseFloat(c[1])+d+e).toFixed(8);return f="S"==c[7]||"W"==c[7]?parseFloat(-f):parseFloat(f),this.decimal[a]=f,f},isDecimal:function(a){return a=a.toString().replace(/\s*/,""),!isNaN(parseFloat(a))&&parseFloat(a)==a},isSexagesimal:function(a){return a=a.toString().replace(/\s*/,""),this.sexagesimalPattern.test(a)},round:function(a,b){var c=Math.pow(10,b);return Math.round(a*c)/c}}),"undefined"!=typeof module&&"undefined"!=typeof module.exports?(module.exports=d,"object"==typeof a&&(a.gislib=d)):"function"==typeof define&&define.amd?define("gislib",[],function(){return d}):a.gislib=d}(this);